Not very secure


   function alphanumeric(string) {
  if (string.length === 0) return false;

  for (let i = 0; i < string.length; i++) {
    const c = string[i];
    let upper = false;
    let lower = false;
    let digit = false;

    const code = c.charCodeAt(0);

    if (code >= 65 && code <= 90) {
      upper = true;
    } else if (code >= 97 && code <= 122) {
      lower = true;
    } else if (code >= 48 && code <= 57) {
      digit = true;
    }

    if (!upper && !lower && !digit) {
      return false;
    }
  }
  return true;
}











export const boolToWord = (bool: boolean): string => {
  if(bool === true){
   return 'Yes'
  }
  return 'No'
};

function scoreboard(sentence) {
  const numbersMap = {
    "nil": 0,
    "one": 1,
    "two": 2,
    "three": 3,
    "four": 4,
    "five": 5,
    "six": 6,
    "seven": 7,
    "eight": 8,
    "nine": 9
  };

  const words = sentence.toLowerCase().split(/\W+/);
  const scores = [];

  for (let word of words) {
    if (word in numbersMap) {
      scores.push(numbersMap[word]);
      if (scores.length === 2) break; 
    }
  }

  return scores;
}






export function addBinary(a:number,b:number):string {
const sum = a + b;
 return sum.toString(2)
}


export function addBinary(a:number,b:number):string {
const sum = a + b;
 return sum.toString(2)
}









Sort and Star

   answer: 
export function twoSort(s: string[]): string {
    let str = s.sort();
  return str[0].split('').join('****');
}
       








Help Bob count letters and digits.

  answer:
        function countLettersAndDigits(input) {
   let count=0
   let regex=/[a-zA-Z0-9]/;
  
  for(let i=0 ;i < input.length;i++){
    if(regex.test(input[i])){
      count ++;
    }
  }
  
  return count;
  
}















Are we alternate?



    answer:

         function isAlt(word) {
    let vowel=['a','e','i','o','u']
  for(let i=0;i<word.length-1;i++){
      if(vowel.includes(word[i]) && vowel.includes(word[i+1])){
          return false;
      }
    
     if(!vowel.includes(word[i]) && !vowel.includes(word[i+1])){
          return false;
      }   
  }
  
  return true;
}









Run your String

   answer:

        function runYourString (arg, obj) {
  const funct= new Function(obj.param,obj.func);
  return funct(arg);
}










Proof Read
  step 1 :

        function proofread (str) { 
let str2=str.toLowerCase().replace(/ie/gi,'ei');
 str2=str2.split('. ').map(sentence => sentence[0].toUpperCase() + sentence.slice(1)).join('. ');
  return str2;

} 


 step 2 :
      function proofread (str) { 
let str1=str.toLowerCase();
let temp='';
 let str2=''; 
for(let i=0;i<str1.length;i++){
  
  if(str1[i]==='i' && str1[i +1] === 'e'){
      str2 +='ei';
      i++
  }else{
      str2 += str1[i];
  }
}

 str2=str2.split('. ').map(sentence => sentence[0].toUpperCase() + sentence.slice(1)).join('. ');
  return str2;

} 
       
   
