codewars katas:

Is there a vowel in there?:
 answer:
      function isVow(s){

    let arr=s
    let newArr=[];
    
    for(let i=0;i<arr.length;i++){
        if(String.fromCharCode(arr[i]) === 'a' || String.fromCharCode(arr[i]) === 'e' || String.fromCharCode(arr[i]) === 'i' || String.fromCharCode(arr[i]) === 'o' || String.fromCharCode(arr[i])=== 'u'){
            newArr.push(String.fromCharCode(arr[i]));
        }else{
          newArr.push(arr[i])
        }
    }
    return newArr;
    
}


Sum of Cubes:

 answer:

    function sumCubes(n){
  let sum = 0;
  
  for(let i=0;i<=n;i++){
    sum +=i*i*i;
  }
  
  return sum
}


The highest profit wins!

   answer:
       function minMax(arr){
    arr1= arr.sort((a,b)=>a-b);
    
    return [arr1[0],arr1[arr1.length-1]];
}


 get ascii value of character

   answer:

       function getASCII(c){
  // ...
  return c.charCodeAt(0);
}

Find the capitals

    answer:


var capitals = function (word) {

   let word1=word;
  let word2=[];
  
  for(let i=0;i<word1.length;i++){
    if(word1.charCodeAt(i) >= 65 && word1.charCodeAt(i) <97){
      word2.push(i);
    }
  }
  
  return word2;
  
};


Convert an array of strings to array of numbers


answer:

function toNumberArray(stringarray){
  return stringarray.map((element)=>Number(element));
}


Summing a number's digits

answer:


function sumDigits(number) {
  let sum =0;
 let num =Math.abs(number);
  while(num > 0){
    sum +=num%10;
    num =Math.floor(num/10)
  }
  
  return sum;
}

function findDigit(num, nth = 0) {

 let n=Math.abs(num);
  let digit=0
  let arr=n.toString().split('').map(element=>Number(element));
  
  if(nth > arr.length ){
      return 0;
  }else if(nth.toString().includes('-') || nth === 0){
      return -1;
  }
  
  for(let i=arr.reverse().length -1;i>=0;i--){
      if(nth -1 === i){
          digit =arr[i];
      }
  }
 
  
  
  
  
  return digit;
}


function findDigit(num, nth = 0) {
  let n = Math.abs(num);
  
  if (nth === 0 || nth.toString().includes('-')) {
    return -1;
  }
  
   let totalDigits = Math.floor(Math.log10(n)) + 1;
    if(nth >totalDigits){
        return 0;
    }
  
  
  let digits = 0;
  let currentD = 0;
  let target = -1;
  
   
  while (n > 0) {
    digits = n % 10;
    
    if (currentD === nth - 1) {
      target = digits;
      break;  
    }
    
    n = Math.floor(n / 10);
    currentD++;
  }
  
  return target;
}


console.log(findDigit(-456,4));
    





